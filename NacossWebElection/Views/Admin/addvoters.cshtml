@model NacossWebElection.Models.ViewModels.voters

@{
    ViewBag.Title = "addvoters";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row">
    <div class="col-md-5">
        <h2>Regiser a new Voter</h2>
        @using (Html.BeginForm("addvoters", "admin", new { @id = string.Empty }, FormMethod.Post, new { id = "form1" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-default">
                <div id="myAlert" class="hide-loader">
                    <div class="alert alert-warning alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 id="alertText"></h4>
                        @Html.ValidationSummary()
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MatNo, htmlAttributes: new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.MatNo, "", new { @class = "text-danger" })
                    @Html.TextBoxFor(model => model.MatNo, new { @class = "form-control" } ) 
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.FirstName, new {  @class = "form-control" } ) 
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.LastName, new {  @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Sex, new List<SelectListItem>{
                         new SelectListItem{ Text="Male", Value="MALE"},
                         new SelectListItem{ Text="Female", Value="FEMALE"}}, htmlAttributes: new { @class = "form-control" })
                  
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Phone, new {  @class = "form-control"  })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentLevel, htmlAttributes: new { @class = "control-label" })
          
                    @Html.DropDownListFor(model => model.CurrentLevel, new List<SelectListItem>{
                         new SelectListItem{ Text="HND1", Value="HND1"},
                         new SelectListItem{ Text="ND1", Value="ND1"}}, htmlAttributes: new { @class = "form-control", placeholder="Select Level" })
                    @Html.ValidationMessageFor(model => model.CurrentLevel, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button type="submit" id="btnSubmit" class="btn btn-primary">
                        Add <img class="hide-loader" id="imgLoad" src="~/Images/ajax/LoadingCircle.gif" width="25" height="25" />
                    </button>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "Index")

        </div>
    </div>
    <div class="col-md-7">
        @Html.Action("votersList")
    </div>
    </div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModal-label">Notification</h4>
            </div>
            <div class="modal-body">
                <h2 id="msgText"></h2>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/AppScripts/Voter.js"></script>
 }